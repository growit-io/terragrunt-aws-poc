name: 'Integration'

on: [pull_request]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: merge-base
        run: |
          # Detect merge commit with unrelated histories
          head_ref=$(git rev-parse ${{ github.event.pull_request.head.sha }})
          commit=$(git cat-file -p $head_ref)
          unrelated_histories=false

          if [[ $(grep -c '^parent ' <<<"$commit") -gt 1 ]]; then
            parents=$(awk '/^parent / {print $2}' <<<"$commit")

            if ! git merge-base --is-ancestor $(echo $parents); then
              unrelated_histories=true
            fi
          fi

          echo ::set-output name=unrelated-histories::$unrelated_histories
      - # https://github.com/wagoid/commitlint-github-action
        # The commitlint action does not handle unrelated histories and fails,
        # so we detect this condition and skip the step, only in that case.
        if: steps.merge-base.outputs.unrelated-histories == 'false'
        uses: wagoid/commitlint-github-action@v4
        with:
          configFile: .commitlint.config.js
          firstParent: false
          failOnWarnings: true
          helpURL: 'https://github.com/conventional-changelog/commitlint/#what-is-commitlint'

  fix:
    if: ${{ startsWith(github.head_ref, 'release-v') }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Setup Graphviz'
        uses: ts-graphviz/setup-graphviz@v1
      - name: 'Setup Go'
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: 'Setup Terraform-Docs'
        run: go install github.com/terraform-docs/terraform-docs@v0.16.0
      - name: 'Setup TFLint'
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.31.0
      - name: 'Setup TFLint plugin cache'
        uses: actions/cache@v2
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}
      - name: 'Configure Git'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: 'Download TFLint plugins'
        run: tflint --init
      - name: 'Fix common violations of best practices'
        uses: ./.github/actions/make
        with:
          goals: fix
      - name: 'Commit changes after `make fix`'
        run: |
          git add -A
          git commit -m "chore($(basename $GITHUB_REPOSITORY)): fix common violations" || true
      - name: 'Update dependency graphs'
        uses: ./.github/actions/make
        with:
          goals: graph
      - name: 'Commit changes after `make graph`'
        run: |
          git add -A
          git commit -m "chore($(basename $GITHUB_REPOSITORY)): update dependency graphs" || true
      - name: 'Push changes, if any'
        # Since we used a non-default token when checking out the repository,
        # this step may re-trigger another run of this workflow. In the worst
        # case, this could lead to an infinite loop. However, as the `fix` and
        # `graph` goals are idempotent this is unlikely an issue in practice.
        run: git push

  test:
    if: ${{ ! startsWith(github.head_ref, 'release-v') }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Setup Go'
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: 'Setup Terraform-Docs'
        run: go install github.com/terraform-docs/terraform-docs@v0.16.0
      - name: 'Setup TFLint'
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.31.0
      - name: 'Setup TFLint plugin cache'
        uses: actions/cache@v2
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          # We must fetch all history in order to compare the checked out ref
          # against the main branch for SKIP_UNCHANGED to work as expected.
          fetch-depth: 0
      - name: 'Download TFLint plugins'
        run: tflint --init
      - name: 'Run tests for changed subdirectories'
        uses: ./.github/actions/make
        with:
          goals: test SKIP_UNCHANGED=true

  plan:
    if: ${{ ! startsWith(github.head_ref, 'release-v') }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Create execution plans'
        uses: ./.github/actions/make
        with:
          directory: examples
          pre-goals: init
          goals: plan
        env:
          TERRAGRUNT_FLAGS: --terragrunt-non-interactive
          TERRAGRUNT_PLAN_OUT: tfplan
      - name: 'Check for changed paths'
        id: plan-feedback
        run: .terragrunt/bin/plan-feedback tfplan
    outputs:
      changed-paths: ${{ steps.plan-feedback.outputs.changed-paths }}

  feedback:
    needs: [commitlint, fix, test, plan]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Generate feedback'
        id: feedback
        uses: ./.github/actions/feedback
        with:
          needs: ${{ toJSON(needs) }}
